const FEED_URL = (window.FEED_URL_OVERRIDE || "data/feed.json") + "?_=" + Date.now();
const $grid = document.getElementById("grid");
const $template = document.getElementById("cardTemplate");
const $search = document.getElementById("search");
const $sourceFilter = document.getElementById("sourceFilter");
const $sortOrder = document.getElementById("sortOrder");
document.getElementById("year").textContent = new Date().getFullYear();
let deals = []; let filtered = [];
fetch(FEED_URL).then(r=>r.json()).then(json=>{deals=(json.items||[]).map(normalize);filtered=[...deals];render();}).catch(e=>{$grid.innerHTML='<div class="loading">Failed to load feed.json</div>';});
function normalize(x){const createdAt=x.createdAtISO||x.created_at||x.time||new Date().toISOString();const price=parseFloat(String(x.price||"").replace(/[^0-9.,]/g,"").replace(",", "."));return{ id:x.id||crypto.randomUUID(), title:x.title||x.name||"Untitled", description:x.description||x.desc||"", image:x.image||x.photo||x.picture||"https://picsum.photos/800/600?blur=2", price:isFinite(price)?price:null, currency:x.currency||"â‚¬", url:x.url||x.link||"#", source:x.source||x.vendor||"Other", createdAtISO:new Date(createdAt).toISOString() };}
function render(){const query=($search.value||"").toLowerCase();const src=$sourceFilter.value;const order=$sortOrder.value; filtered=deals.filter(d=>{const matchesText=!query||(d.title+" "+d.description).toLowerCase().includes(query);const matchesSource=!src||d.source===src;return matchesText&&matchesSource;}); filtered.sort((a,b)=>{if(order==="oldest")return new Date(a.createdAtISO)-new Date(b.createdAtISO);if(order==="priceAsc")return (a.price??Infinity)-(b.price??Infinity);if(order==="priceDesc")return (b.price??-Infinity)-(a.price??-Infinity);return new Date(b.createdAtISO)-new Date(a.createdAtISO);}); $grid.innerHTML=""; for(const d of filtered){const node=$template.content.cloneNode(true);const a=node.querySelector("a.thumb");const img=node.querySelector("img");const title=node.querySelector(".title");const desc=node.querySelector(".desc");const price=node.querySelector(".price");const source=node.querySelector(".source");const cta=node.querySelector(".cta");const timeago=node.querySelector(".timeago"); a.href=d.url;cta.href=d.url;img.src=d.image;img.alt=d.title;title.textContent=d.title;desc.textContent=d.description||"";price.textContent=d.price?`${d.price.toFixed(2)} ${d.currency}`:"";source.textContent=d.source;timeago.textContent=toTimeAgo(d.createdAtISO); $grid.appendChild(node);} if(filtered.length===0){$grid.innerHTML='<div class="loading">No deals match your filters.</div>';}} 
$search.addEventListener("input", render); $sourceFilter.addEventListener("change", render); $sortOrder.addEventListener("change", render);
function toTimeAgo(iso){const s=Math.floor((Date.now()-new Date(iso).getTime())/1000);if(s<60)return `${s}s ago`;const m=Math.floor(s/60);if(m<60)return `${m}m ago`;const h=Math.floor(m/60);if(h<24)return `${h}h ago`;const d=Math.floor(h/24);return `${d}d ago`; }